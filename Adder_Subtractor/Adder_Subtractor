`timescale 1ns / 1ps

module seven_seg_controller(X, Y, C, carryin, AN, DP);
    input [3:0] X;
    input [3:0] Y;
    input carryin;
    output[6:0] C;
    output[7:0] AN;
    output DP;
    wire[3:0] S;
    
    assign AN[0] = 0;   //Turns on one seven segment display
    assign AN[1] = 1;   //The rest should be turned off
    assign AN[2] = 1;
    assign AN[3] = 1;
    assign AN[4] = 1;
    assign AN[5] = 1;
    assign AN[6] = 1;
    assign AN[7] = 1;
    assign DP = 1; //Turns off display
    
    adder_subtractor_unit Math(carryin, X, Y, S);
    binary_hex_converter sevenSegment(S, C);
endmodule

module adder_subtractor_unit (carryin, X, Y, S); //carryout, overflow);
  parameter n = 4;  
  input carryin;
  input [n-1:0] X, Y;
  output reg [n-1:0] S;
  //output reg carryout, overflow;
  always @(X, Y, carryin)
    begin
    if (carryin == 0)
    S = X + Y;
    else
    S = X - Y;
        //carryout = (X[n-1] & Y[n-1]) | (X[n-1] & ~S[n-1]) | (Y[n-1] & ~S[n-1]);
        //overflow = (X[n-1] & Y[n-1] & ~S[n-1]) | (~X[n-1] & ~Y[n-1] & S[n-1]);
    end
endmodule

module binary_hex_converter(S, C); //7 segment decoder values
    input wire[3:0] S;
    output reg [6:0] C;
    
        always@*                  //Obtained by truth table
            case(S)
                4'b0000: C = 7'b0000001;    //0
                4'b0001: C = 7'b1001111;    //1
                4'b0010: C = 7'b0010010;    //2
                4'b0011: C = 7'b0000110;    //3
                4'b0100: C = 7'b1001100;    //4
                4'b0101: C = 7'b0100100;    //5
                4'b0110: C = 7'b0100000;    //6
                4'b0111: C = 7'b0001101;    //7
                4'b1000: C = 7'b0000000;    //8
                4'b1001: C = 7'b0001100;    //9
                4'b1010: C = 7'b0001000;    //A
                4'b1011: C = 7'b1100000;    //B
                4'b1100: C = 7'b0110001;    //C
                4'b1101: C = 7'b1000010;    //D
                4'b1110: C = 7'b0110000;    //E
                4'b1111: C = 7'b0111000;    //F
                
                    default: C = 7'b0000001;    //default is set to 0
            endcase
     endmodule
     
     
