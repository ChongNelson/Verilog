`timescale 1ns / 1ps

module topModule(Resetn, resetSW, System_Clock, C, AN, DP);

input resetSW;
input System_Clock;
input Resetn;
output [6:0] C;
output [7:0] AN;
output DP;
parameter E = 1;
//Allows for the 7 segments to display
    assign AN[0] = 0;   //Turns on one seven segment display
    assign AN[1] = 1;   //The rest should be turned off
    assign AN[2] = 1;
    assign AN[3] = 1;
    assign AN[4] = 1;
    assign AN[5] = 1;
    assign AN[6] = 1;
    assign AN[7] = 1;
    assign DP = 1; //1 = Turns off display, 0 = Turns on display
    
wire outsignal;
wire [2:0] y;
    
slowerClkGen myClock(System_Clock, resetSW, outsignal);
upcounter myCounter(Resetn, outsignal, E, y);
seven_seg_decoder mySevenSeg(y, C);

endmodule 

module slowerClkGen(clk, resetSW, outsignal); //Slow Clock Generator
input clk;
input resetSW;
output outsignal;
reg [26:0] counter;  
reg outsignal;
    always @ (posedge clk)
    begin
        if (resetSW)
            begin
                counter=0;
                outsignal=0;
            end
        else
            begin
                counter = counter +1;
        if (counter == 50000000) //why is this a 0.5 Hz?
            begin                   //100,000,000 was changed to 50,000,000
                outsignal=~outsignal;   //100,000,000/2*50,000,000 = 1 second
                counter =0;             
            end
            end
    end
endmodule

module upcounter (Resetn, Clock, E, Q); //3-bit counter
input Resetn, Clock, E;
output reg [2:0] Q;
    always @(negedge Resetn, posedge Clock)
        if (Resetn)
            Q <= 0;
        else if (E)
            Q <= Q + 1;
endmodule

module seven_seg_decoder(y, C); //7 segment decoder values
    input wire[2:0] y;
    output reg [6:0] C;
    
        always@*                  //Obtained by truth table
            case(y)
                3'b000: C = 7'b0000001;    //0
                3'b001: C = 7'b1001111;    //1
                3'b010: C = 7'b0010010;    //2
                3'b011: C = 7'b0000110;    //3
                3'b100: C = 7'b1001100;    //4
                3'b101: C = 7'b0100100;    //5
                3'b110: C = 7'b0100000;    //6
                3'b111: C = 7'b0001111;    //7
                    default: C = 7'b0000000;    //default is set to 0
            endcase
     endmodule
